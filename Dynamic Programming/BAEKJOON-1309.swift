//
//  BAEKJOON-1309.swift
//  
//
//  Created by 김민기 on 2022/05/30.
//

//가로로도 세로로도 붙어 있게 배치할 수는 없다.
// 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자. 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.
//9901로 나눈 나머지를 출력하여라.


//n 이 왼쪽에 있는 경우 , 오른쪽에 있는 경우 , 배치하지 않는 경우 3가지로 나누어서 봄
//n-1 이 왼쪽에 있으면 n은 오른쪽과 배치하지 않는 경우가 가능
//n-1 이 오른쪽에 있으면 n은 왼쪽과 배치 하지 않는 경우가 가능
//n-1 에 배치 하지 않은 경우는 오른쪽,왼쪽,배치하지 않은 경우도 가능


//배치하지 않는 경우는 j : 0
//왼쪽은 j : 1
//오른쪽 j : 2

import Foundation

var input = Int(readLine()!)!
var d = Array(repeating:Array(repeating:0,count:3),count:input)
var count = 0

d[0][0] = 1 //배치 하지 않는 경우도 경우의 수로 카운트
d[0][1] = 1 //왼쪽 배치
d[0][2] = 1 //오른쪽 배치
for i in 1..<input{
    for j in 0...2 {
        if j == 0{
            d[i][j] = (d[i-1][1] + d[i-1][2] + d[i-1][0]) % 9901
        }
        if j == 1{
            d[i][j] = (d[i-1][0] + d[i-1][2]) % 9901
        }
        if j == 2{
            d[i][j] = (d[i-1][1] + d[i-1][0]) % 9901
        }
    }
}

for k in 0...2{
    count += d[input-1][k] % 9901
}
print(count % 9901)
